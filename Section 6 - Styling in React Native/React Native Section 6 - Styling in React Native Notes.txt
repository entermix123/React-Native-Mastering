Section 6: Styling in React Native

Content

26. Types of styling
27. External file
28. Margin and Padding



26. Types of styling
====================

Inline styling is when we set styling in the component

Internal styling is when we use styling section in the same file 

App.jsx
-----------------------------------------------------------------
...
const Propscomponent = (props) => {
  return (
    <>
      <View style={styles.second}>
        <Text style={styles.text}> Second component </Text>
        <Text style={{ fontSize: 50, color: "gray"}}> {props.newData}  </Text>   
			Inline styling HERE     
      </View>
    </>
  );
};

// INTERNAL STYLING SECTION BELOW

const styles = StyleSheet.create({
  container: {
    color: "red",
    backgroundColor: "pink",
  },
  second: {
    color: "red",
    backgroundColor: "green",
    height: 100,
  },
  text: {
    fontWeight: "bold",
    color: "red",
  },
});
-----------------------------------------------------------------



Using internal and inline styling:

We have to make array with the styling sources. Inline styling is prioritized in case of choice.

App.jsx
-----------------------------------------------------------------
...
const Propscomponent = (props) => {
  return (
    <>
      <View style={[styles.second, { backgroundColor: "hotpaink" }]}>			HERE
        <Text style={styles.text}> Second component </Text>
        <Text style={{ fontSize: 50, color: "gray"}}> {props.newData}  </Text>        
      </View>
    </>
  );
};
...
-----------------------------------------------------------------



27. External file
=================

Create file style.js

style.js
-----------------------------------------------------------------
import { StyleSheet } from "react-native";

//styling
const Styles = StyleSheet.create({
  container: {
    color: "red",
    backgroundColor: "pink",
  },
  second: {
    color: "red",
    backgroundColor: "green",
    height: 100,
  },
  text: {
    fontWeight: "bold",
    color: "red",
  },
});

export default Styles;

-----------------------------------------------------------------


Import the created styles in App.jsx and fix the naming where used.

App.jsx
-----------------------------------------------------------------
// import Libraries
import React, { useState } from "react";
import { Text, StyleSheet, View, Button, Alert } from "react-native";
import Styles from "./style";						// imported Styles
// import Login from "./screen/Login.js";
// import Signup from "./screen/Signup.js";

// components
const App = () => {

  // let newData = "Josh";                         /* Set props in the main element */  
  const [ user, setUser ] = useState("Joe");
  const [ data, setData ] = useState("Sam");
  const [ newData, SetnewData ] = useState("Divak")

  function updateName() {  
    setUser("Carlos");  
    setData("Peter");
  };

  return (
    <View style={Styles.container}>				// fixed naming in all usages
      <Text style={Styles.text}>{user}</Text>
      <Text style={Styles.text}>{data}</Text>
      <Button title="Press Here" color="red" onPress={updateName}        /* mandatory prop is "title="title text" onPress is event handler */
      />
      <Propscomponent newData={newData} />
      <Button title="Change component data true props" color="gray" onPress={() => SetnewData('Pesho')}        /* mandatory prop is "title="title text" onPress is event handler */
      />
    </View>
  );
};


const Propscomponent = (props) => {
  return (
    <>
      <View style={[Styles.second, { backgroundColor: "hotpaink" }]}>
        <Text style={Styles.text}> Second component </Text>
        <Text style={{ fontSize: 50, color: "gray"}}> {props.newData}  </Text>        
      </View>
    </>
  );
};


export default App;
-----------------------------------------------------------------




28. Margin and Padding
======================

How to center text or elements (justifyContent: "center",)

stle.js
-----------------------------------------------------------------
import { StyleSheet } from "react-native";

//styling
const Styles = StyleSheet.create({
  container: {
    color: "red",
    backgroundColor: "pink",
  },
  second: {
    color: "red",
    backgroundColor: "green",
    height: 500,
    justifyContent: "center",
  },
  text: {
    fontWeight: "bold",
    textAlign: "center",
  },
});

export default Styles;

-----------------------------------------------------------------



Set component to use external styling laso with array of styling sources:

App.jsx
-----------------------------------------------------------------
// import Libraries
import React, { useState } from "react";
import { Text, StyleSheet, View, Button, Alert } from "react-native";
import Styles from "./style";
// import Login from "./screen/Login.js";
// import Signup from "./screen/Signup.js";

// components
const App = () => {

  // let newData = "Josh";                         /* Set props in the main element */  
  const [ user, setUser ] = useState("Joe");
  const [ data, setData ] = useState("Sam");
  const [ newData, SetnewData ] = useState("Divak")

  function updateName() {  
    setUser("Carlos");  
    setData("Peter");
  };

  return (
    <View style={Styles.container}>
      <Text style={Styles.text}>{user}</Text>
      <Text style={Styles.text}>{data}</Text>
      <Button title="Press Here" color="red" onPress={updateName}        /* mandatory prop is "title="title text" onPress is event handler */
      />
      <Propscomponent newData={newData} />
      <Button title="Change component data true props" color="gray" onPress={() => SetnewData('Pesho')}        /* mandatory prop is "title="title text" onPress is event handler */
      />
    </View>
  );
};


const Propscomponent = (props) => {
  return (
    <>
      <View style={[Styles.second, { backgroundColor: "hotpaink" }]}>
        <Text style={Styles.text}> Second component </Text>
        <Text style={[Styles.text, { fontSize: 50, color: "gray"}]}> {props.newData}  </Text>        
      </View>
    </>
  );
};


export default App;
-----------------------------------------------------------------



Padding and margin
------------------
Padding is external component spacing
Margin is internal component spacing



















